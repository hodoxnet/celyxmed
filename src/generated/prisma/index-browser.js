
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expires: 'expires',
  sessionToken: 'sessionToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LanguageScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  isActive: 'isActive',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogScalarFieldEnum = {
  id: 'id',
  coverImageUrl: 'coverImageUrl',
  isPublished: 'isPublished',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogTranslationScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  fullDescription: 'fullDescription',
  content: 'content',
  tocItems: 'tocItems',
  blogId: 'blogId',
  languageCode: 'languageCode'
};

exports.Prisma.HizmetScalarFieldEnum = {
  id: 'id',
  published: 'published',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  heroImageUrl: 'heroImageUrl',
  heroImageAlt: 'heroImageAlt',
  whyBackgroundImageUrl: 'whyBackgroundImageUrl',
  ctaBackgroundImageUrl: 'ctaBackgroundImageUrl',
  ctaMainImageUrl: 'ctaMainImageUrl',
  ctaMainImageAlt: 'ctaMainImageAlt'
};

exports.Prisma.HizmetTranslationScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  languageCode: 'languageCode',
  slug: 'slug',
  breadcrumb: 'breadcrumb',
  title: 'title',
  description: 'description',
  tocTitle: 'tocTitle',
  tocAuthorInfo: 'tocAuthorInfo',
  tocCtaDescription: 'tocCtaDescription',
  introVideoId: 'introVideoId',
  introTitle: 'introTitle',
  introDescription: 'introDescription',
  introPrimaryButtonText: 'introPrimaryButtonText',
  introPrimaryButtonLink: 'introPrimaryButtonLink',
  introSecondaryButtonText: 'introSecondaryButtonText',
  introSecondaryButtonLink: 'introSecondaryButtonLink',
  overviewSectionTitle: 'overviewSectionTitle',
  overviewSectionDescription: 'overviewSectionDescription',
  whySectionTitle: 'whySectionTitle',
  gallerySectionTitle: 'gallerySectionTitle',
  gallerySectionDescription: 'gallerySectionDescription',
  testimonialsSectionTitle: 'testimonialsSectionTitle',
  stepsSectionTitle: 'stepsSectionTitle',
  stepsSectionDescription: 'stepsSectionDescription',
  recoverySectionTitle: 'recoverySectionTitle',
  recoverySectionDescription: 'recoverySectionDescription',
  ctaTagline: 'ctaTagline',
  ctaTitle: 'ctaTitle',
  ctaDescription: 'ctaDescription',
  ctaButtonText: 'ctaButtonText',
  ctaButtonLink: 'ctaButtonLink',
  ctaAvatarText: 'ctaAvatarText',
  pricingSectionTitle: 'pricingSectionTitle',
  pricingSectionDescription: 'pricingSectionDescription',
  expertsSectionTitle: 'expertsSectionTitle',
  expertsTagline: 'expertsTagline',
  faqSectionTitle: 'faqSectionTitle',
  faqSectionDescription: 'faqSectionDescription',
  metaTitle: 'metaTitle',
  metaDescription: 'metaDescription',
  metaKeywords: 'metaKeywords'
};

exports.Prisma.HizmetMarqueeImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  alt: 'alt',
  order: 'order',
  hizmetId: 'hizmetId'
};

exports.Prisma.HizmetGalleryImageScalarFieldEnum = {
  id: 'id',
  src: 'src',
  alt: 'alt',
  order: 'order',
  hizmetId: 'hizmetId'
};

exports.Prisma.HizmetCtaAvatarScalarFieldEnum = {
  id: 'id',
  src: 'src',
  alt: 'alt',
  order: 'order',
  hizmetId: 'hizmetId'
};

exports.Prisma.HizmetTocItemScalarFieldEnum = {
  id: 'id',
  text: 'text',
  isBold: 'isBold',
  level: 'level',
  order: 'order',
  hizmetTranslationId: 'hizmetTranslationId'
};

exports.Prisma.HizmetIntroLinkScalarFieldEnum = {
  id: 'id',
  targetId: 'targetId',
  number: 'number',
  text: 'text',
  order: 'order',
  hizmetTranslationId: 'hizmetTranslationId'
};

exports.Prisma.HizmetStepScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  linkText: 'linkText',
  order: 'order',
  hizmetTranslationId: 'hizmetTranslationId'
};

exports.Prisma.HizmetFaqItemScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer',
  order: 'order',
  hizmetTranslationId: 'hizmetTranslationId'
};

exports.Prisma.HizmetOverviewTabDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  value: 'value',
  imagePath: 'imagePath',
  imageAlt: 'imageAlt',
  order: 'order'
};

exports.Prisma.HizmetOverviewTabTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  triggerText: 'triggerText',
  title: 'title',
  content: 'content',
  buttonText: 'buttonText',
  buttonLink: 'buttonLink'
};

exports.Prisma.HizmetWhyItemDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  number: 'number',
  order: 'order'
};

exports.Prisma.HizmetWhyItemTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  title: 'title',
  description: 'description'
};

exports.Prisma.HizmetTestimonialDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  stars: 'stars',
  imageUrl: 'imageUrl',
  order: 'order'
};

exports.Prisma.HizmetTestimonialTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  text: 'text',
  author: 'author',
  treatment: 'treatment'
};

exports.Prisma.HizmetRecoveryItemDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  imageUrl: 'imageUrl',
  imageAlt: 'imageAlt',
  order: 'order'
};

exports.Prisma.HizmetRecoveryItemTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  title: 'title',
  description: 'description'
};

exports.Prisma.HizmetPricingPackageDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  isFeatured: 'isFeatured',
  order: 'order'
};

exports.Prisma.HizmetPricingPackageTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  title: 'title',
  price: 'price',
  features: 'features'
};

exports.Prisma.HizmetExpertItemDefinitionScalarFieldEnum = {
  id: 'id',
  hizmetId: 'hizmetId',
  imageUrl: 'imageUrl',
  imageAlt: 'imageAlt',
  order: 'order'
};

exports.Prisma.HizmetExpertItemTranslationScalarFieldEnum = {
  id: 'id',
  definitionId: 'definitionId',
  languageCode: 'languageCode',
  name: 'name',
  title: 'title',
  description: 'description',
  ctaText: 'ctaText'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Language: 'Language',
  Blog: 'Blog',
  BlogTranslation: 'BlogTranslation',
  Hizmet: 'Hizmet',
  HizmetTranslation: 'HizmetTranslation',
  HizmetMarqueeImage: 'HizmetMarqueeImage',
  HizmetGalleryImage: 'HizmetGalleryImage',
  HizmetCtaAvatar: 'HizmetCtaAvatar',
  HizmetTocItem: 'HizmetTocItem',
  HizmetIntroLink: 'HizmetIntroLink',
  HizmetStep: 'HizmetStep',
  HizmetFaqItem: 'HizmetFaqItem',
  HizmetOverviewTabDefinition: 'HizmetOverviewTabDefinition',
  HizmetOverviewTabTranslation: 'HizmetOverviewTabTranslation',
  HizmetWhyItemDefinition: 'HizmetWhyItemDefinition',
  HizmetWhyItemTranslation: 'HizmetWhyItemTranslation',
  HizmetTestimonialDefinition: 'HizmetTestimonialDefinition',
  HizmetTestimonialTranslation: 'HizmetTestimonialTranslation',
  HizmetRecoveryItemDefinition: 'HizmetRecoveryItemDefinition',
  HizmetRecoveryItemTranslation: 'HizmetRecoveryItemTranslation',
  HizmetPricingPackageDefinition: 'HizmetPricingPackageDefinition',
  HizmetPricingPackageTranslation: 'HizmetPricingPackageTranslation',
  HizmetExpertItemDefinition: 'HizmetExpertItemDefinition',
  HizmetExpertItemTranslation: 'HizmetExpertItemTranslation'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
